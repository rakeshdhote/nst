# This workflow handles the release process for the Tauri application
# It can be triggered either by pushing a tag or manually through the GitHub Actions UI
name: Release
on:
  # Manual trigger with platform selection
  workflow_dispatch:
    inputs:
      platform:
        description: 'Select platform(s) to build'
        required: true
        type: choice
        options:
          - all
          - linux
          - windows
          - macos-intel
          - macos-arm
      version:
        description: 'Release version'
        type: string
        required: true
      release_type:
        description: 'Release type'
        type: choice
        required: true
        options:
          - production
          - beta
          - alpha
      create_release:
        description: 'Create GitHub release'
        type: boolean
        default: true

jobs:
  build-linux:
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.platform == 'linux' || github.event.inputs.platform == 'all')
    # Required for creating GitHub releases
    permissions:
      contents: write
    # Use the latest Ubuntu environment
    runs-on: ubuntu-22.04
    # Run if: tag push OR workflow_dispatch with platform 'linux'
    steps:
      # Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install and configure pnpm package manager
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      # Set up Node.js environment with caching
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Install Rust toolchain
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # Install Linux-specific dependencies
      - name: Install dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libgdk-pixbuf2.0-dev \
            libgdk3.0-cil-dev \
            libcairo2-dev \
            libsoup-3.0-dev \
            libsoup-3.0 \
            libjavascriptcoregtk-4.1-dev \
            libwebkit2gtk-4.1-dev \
            patchelf

      # Set PKG_CONFIG_PATH for system libraries
      - name: Set PKG_CONFIG_PATH
        run: |
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV

      # Install project dependencies using pnpm
      - name: Install dependencies
        run: pnpm install

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          cd backend/python
          pip install -r requirements.txt

      # Build Python binary
      - name: Build Python binary
        run: |
          cd backend/python
          pyinstaller --onefile --name python_backend-x86_64-unknown-linux-gnu main.py
          mkdir -p ../../src-tauri/binaries
          cp dist/python_backend-x86_64-unknown-linux-gnu ../../src-tauri/binaries/

      # Build the Tauri application
      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        with:
          tagName: v${{ github.event.inputs.version || '0.0.1' }}
          releaseName: v${{ github.event.inputs.version || '0.0.1' }}
          releaseBody: |
            See the assets to download and install this version.
            
            Changes in this version:
            - Release build
          releaseDraft: false
          prerelease: ${{ github.event.inputs.release_type != 'production' }}
          includeUpdaterJson: true

      # Cache build outputs for both Next.js and Tauri
      - name: Cache Build Output
        uses: actions/cache@v3
        with:
          path: |
            out
            src-tauri/target
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

  build-macos-intel:
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.platform == 'macos-intel' || github.event.inputs.platform == 'all')
    # Required for creating GitHub releases
    permissions:
      contents: write
    # Use the latest macOS environment
    runs-on: macos-latest
    steps:
      # Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install and configure pnpm package manager
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      # Set up Node.js environment with caching
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Install Rust toolchain
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin

      # Install project dependencies using pnpm
      - name: Install dependencies
        run: pnpm install

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          cd backend/python
          pip install -r requirements.txt

      # Build Python binary
      - name: Build Python binary
        run: |
          cd backend/python
          pyinstaller --onefile --name python_backend-x86_64-apple-darwin main.py
          mkdir -p ../../src-tauri/binaries
          cp dist/python_backend-x86_64-apple-darwin ../../src-tauri/binaries/

      # Build the Tauri application
      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        with:
          tagName: v${{ github.event.inputs.version || '0.0.1' }}
          releaseName: v${{ github.event.inputs.version || '0.0.1' }}
          releaseBody: |
            See the assets to download and install this version.
            
            Changes in this version:
            - Release build
          releaseDraft: false
          prerelease: ${{ github.event.inputs.release_type != 'production' }}
          args: '--target x86_64-apple-darwin'

      # Cache build outputs for both Next.js and Tauri
      - name: Cache Build Output
        uses: actions/cache@v3
        with:
          path: |
            out
            src-tauri/target
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

  build-macos-arm:
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.platform == 'macos-arm' || github.event.inputs.platform == 'all')
    # Required for creating GitHub releases
    permissions:
      contents: write
    # Use the latest macOS environment
    runs-on: macos-latest
    steps:
      # Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install and configure pnpm package manager
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      # Set up Node.js environment with caching
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Install Rust toolchain
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      # Install project dependencies using pnpm
      - name: Install dependencies
        run: pnpm install

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          cd backend/python
          pip install -r requirements.txt

      # Build Python binary
      - name: Build Python binary
        run: |
          cd backend/python
          pyinstaller --onefile --name python_backend-aarch64-apple-darwin main.py
          mkdir -p ../../src-tauri/binaries
          cp dist/python_backend-aarch64-apple-darwin ../../src-tauri/binaries/

      # Build the Tauri application
      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        with:
          tagName: v${{ github.event.inputs.version || '0.0.1' }}
          releaseName: v${{ github.event.inputs.version || '0.0.1' }}
          releaseBody: |
            See the assets to download and install this version.
            
            Changes in this version:
            - Release build
          releaseDraft: false
          prerelease: ${{ github.event.inputs.release_type != 'production' }}
          args: '--target aarch64-apple-darwin'

      # Cache build outputs for both Next.js and Tauri
      - name: Cache Build Output
        uses: actions/cache@v3
        with:
          path: |
            out
            src-tauri/target
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

  build-windows:
    if: github.event_name == 'workflow_dispatch' && (github.event.inputs.platform == 'windows' || github.event.inputs.platform == 'all')
    # Required for creating GitHub releases
    permissions:
      contents: write
    strategy:
      matrix:
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      # Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install and configure pnpm package manager
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      # Set up Node.js environment with caching
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Install Rust toolchain
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      # Add Windows code signing certificate
      - name: Import Windows Certificate
        if: matrix.platform == 'windows-latest'
        env:
          WINDOWS_CERTIFICATE: ${{ secrets.WINDOWS_SIGN_CERT }}
          WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_SIGN_CERT_PASSWORD }}
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate/certificate.b64 -Value $env:WINDOWS_CERTIFICATE
          certutil -decode certificate/certificate.b64 certificate/certificate.pfx
          Remove-Item -Path certificate/certificate.b64

      # Install project dependencies using pnpm
      - name: Install dependencies
        run: pnpm install

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          cd backend/python
          pip install -r requirements.txt

      # Build Python binary
      - name: Build Python binary
        run: |
          cd backend/python
          pyinstaller --onefile --name python_backend-x86_64-pc-windows-msvc main.py
          mkdir -p ../../src-tauri/binaries
          cp dist/python_backend-x86_64-pc-windows-msvc ../../src-tauri/binaries/

      # Build the Tauri application
      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          WINDOWS_CERTIFICATE_PATH: ${{ github.workspace }}/certificate/certificate.pfx
          WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_SIGN_CERT_PASSWORD }}
        with:
          tagName: v${{ github.event.inputs.version || '0.0.1' }}
          releaseName: v${{ github.event.inputs.version || '0.0.1' }}
          releaseBody: |
            See the assets to download and install this version.
            
            Changes in this version:
            - Release build
          releaseDraft: false
          prerelease: ${{ github.event.inputs.release_type != 'production' }}
          includeUpdaterJson: true

      # Cache build outputs for both Next.js and Tauri
      - name: Cache Build Output
        uses: actions/cache@v3
        with:
          path: |
            out
            src-tauri/target
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-
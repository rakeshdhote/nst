name: Windows Build
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src-tauri -> target"
          cache-on-failure: true

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install dependencies
        run: npm ci

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (Rust)
        run: |
          rustup target add x86_64-pc-windows-msvc

      - name: Cache Build Output
        uses: actions/cache@v3
        with:
          path: |
            out
            src-tauri/target
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build Frontend
        run: npm run build

      - name: Install Windows Signing Dependencies
        run: |
          dotnet tool install --global AzureSignTool

      - name: Build and Sign the app
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          AZURE_KEY_VAULT_URI: ${{ secrets.AZURE_KEY_VAULT_URI }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          CERTIFICATE_NAME: ${{ secrets.CERTIFICATE_NAME }}
        run: |
          npm run tauri build
          $msi = Get-ChildItem -Path "src-tauri\target\release\bundle\msi\*.msi" -File | Select-Object -First 1
          $exe = Get-ChildItem -Path "src-tauri\target\release\bundle\nsis\*.exe" -File | Select-Object -First 1

          AzureSignTool sign `
            -kvu "$env:AZURE_KEY_VAULT_URI" `
            -kvi "$env:AZURE_CLIENT_ID" `
            -kvt "$env:AZURE_TENANT_ID" `
            -kvs "$env:AZURE_CLIENT_SECRET" `
            -kvc "$env:CERTIFICATE_NAME" `
            -tr http://timestamp.digicert.com `
            -v "$msi"

          AzureSignTool sign `
            -kvu "$env:AZURE_KEY_VAULT_URI" `
            -kvi "$env:AZURE_CLIENT_ID" `
            -kvt "$env:AZURE_TENANT_ID" `
            -kvs "$env:AZURE_CLIENT_SECRET" `
            -kvc "$env:CERTIFICATE_NAME" `
            -tr http://timestamp.digicert.com `
            -v "$exe"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
